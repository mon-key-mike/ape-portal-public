Notes for MonkeyMike's Mind, wrapping his head around this, 
in order to implement on ramps for his communitities. 
<3 



Note: 1 
  PUBLIC_DECENT_API_KEY_BRIDGE,
  PUBLIC_DECENT_API_KEY_BRIDGE_NONEVM,
  PUBLIC_DECENT_API_KEY_BRIDGE_ZKSYNC,
  PUBLIC_DECENT_API_KEY_SWAP,
  PUBLIC_DECENT_API_KEY_SWAP_NONEVM,
  PUBLIC_DECENT_API_KEY_SWAP_ZKSYNC,
  PUBLIC_DECENT_API_KEY_TOPTRADER,
  PUBLIC_DECENT_API_KEY_TOPTRADER_NONEVM,
  PUBLIC_DECENT_API_KEY_TOPTRADER_ZKSYNC,

2

# To install private @yuga-labs scoped packages from GitHub's package registry,
# you will need to create a GitHub Personal Access Token with "read:packages"
# scope and export GITHUB_TOKEN env var in your shell. Keep your token secret.
@yuga-labs:registry=https://npm.pkg.github.com
//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}

# Pin dependencies to exact version
save-exact=true


3


4. URLa to get all the requied programs and program files to run a nextjs instance, deployed thru vercel, using the wagmi.sh packaged program and rainbow kit packed program, to onboard money to the layer 3 apechain, using arb layer 2 nitro tech, and settling down to native layer 1 Ethereum, all being seperate, seperated, but connected EVM chains are all operating in mainnet phase with a growing state that contains, wallets, contracts, entities, bridges, pools, groups, cohorts, clubs and pockets of ecosystems in, around, amd surrounding

https://github.com/mon-key-mike/ape-portal-public/tree/main
https://nextjs.org/
https://vercel.com/templates/next.js
https://wagmi.sh/
https://www.rainbowkit.com/docs/installation

5



6

7

8

9




COOKIE STORAGE on CLIENT, so saved passwords, and IP keyed addresses can be keyed and mapped using the cookie as instance idenitifier, or a login auth config allowanrce for persistent and storable client data. ?

import { 
  createConfig, 
  http, 
  cookieStorage,
  createStorage
} from 'wagmi'
import { mainnet, sepolia } from 'wagmi/chains'

export function getConfig() {
  return createConfig({
    chains: [mainnet, sepolia],
    ssr: true,
    storage: createStorage({
      storage: cookieStorage,
    }),
    transports: {
      [mainnet.id]: http(),
      [sepolia.id]: http(),
    },
  })
}
